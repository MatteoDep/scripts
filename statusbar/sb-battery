#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status

notch=' '
warn=''
charg=' '
full=''
stag=' '
bat0='  '
bat1='  '
bat2='  '
bat3='  '
bat4='  '
tmpfilelow="/tmp/notifying-low-battery"
tmpfilehigh="/tmp/notifying-high-battery"

case $BUTTON in
	3) notify-send "Battery module" "$notch: not charging
$stag: stagnant charge
$charg: charging
$full: charged
$warn: battery very low!
- Scroll to change adjust backlight." ;;
	4) backlight -i 10 ;;
	5) backlight -d 10 ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
	# Get its remaining capacity and charge status.
	capacity=$(cat "$battery"/capacity 2>/dev/null) || break
	status=$(sed "s/[Dd]ischarging//;s/[Nn]ot charging/$notch/;s/[Cc]harging/$charg/;s/[Uu]nknown/$stag/;s/[Ff]ull/$full/" "$battery"/status)
    [ -f "$tmpfilelow" ] && [ "$status" = "$charg" ] && rm "$tmpfilelow"
    [ -f "$tmpfilehigh" ] && [ -z "$status" ] && rm "$tmpfilehigh"
    [ "$capacity" -ge 85 ] && [ "$status" = "$charg" ] && {
        [ -f "$tmpfilehigh" ] || touch "$tmpfilehigh" &&
        notify-send "Unplug Laptop!" "The battery is charged enough,
                    charging further could decresase battery life."
        }

    case $(( $capacity/25 )) in
        0) cap=$bat0; [ -z "$status" ] && status=$warn && [ -f "$tmpfilelow" ] &&
            touch "$tmpfilelow" && notify-send -u "critical" "LOW BATTERY";;
        1) cap=$bat1;;
        2) cap=$bat2;;
        3) cap=$bat3;;
        4) cap=$bat4;;
    esac

	echo "$status$cap$capacity%"
done
