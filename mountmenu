#!/bin/sh

# Gives a dmenu prompt to mount unmounted drives and Android phones. If
# they're in /etc/fstab, they'll be mounted automatically. Otherwise, you'll
# be prompted to give a mountpoint from already existsing directories. If you
# input a novel directory, it will prompt you to create that directory.

notify(){
    notify-send "$(basename "$0")" "$*"
}

getmtp() {
	mp=$(find $1 2>/dev/null | dmenu -i -p "Type in mount point:") || exit 1
	[ "$mp" = "" ] && exit 1
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "no\nyes" | dmenu -i -p "$mp does not exist. Create it?") || exit 1
		if [ "$mkdiryn" = "yes" ]; then
            mkdir -p "$mp" || sudo -A mkdir -p "$mp"
        else
            exit 1
        fi
	fi
}

mountusb() {
    # try to mount without mountpoint (if in fstab will succed)
	sudo -A mount "$1" 2>/dev/null && notify "  $1 mounted." && exit 0
	exclude_args=$(lsblk -nrpo "name,mountpoint" | awk '$1!~/'"$exclude_exp"'/&&length($2)>1{printf "-not ( -path *%s -prune ) ",$2}')
	getmtp "/mnt /media /mount /home -maxdepth 5 -type d $exclude_args"
	partitiontype="$(lsblk -no "fstype" "$1")"
	case "$partitiontype" in
		"vfat") echo hey
            sudo -A mount -t vfat "$1" "$mp" -o rw,umask=0000
            ;;
		"exfat")
            sudo -A mount "$1" "$mp" -o uid="$(id -u)",gid="$(id -g)"
            ;;
		*) sudo -A mount "$1" "$mp"; user="$(whoami)"; ug="$(groups | awk '{print $1}')"; sudo -A chown "$user":"$ug" "$mp";;
	esac
	if [ "$?" -gt 0 ]; then
        notify "  could not mount $1."
        exit 1
    fi
    notify "  $1 mounted to $mp."
}

mountandroid() {
	getmtp "$HOME -maxdepth 3 -type d"
    simple-mtpfs --device "$1" "$mp"
	echo "OK" | dmenu -i -p "Tap Allow on your phone if it asks for permission and then press enter" || exit 1
	simple-mtpfs --device "$1" "$mp"
	if [ "$?" -gt 0 ]; then
        notify " could not mount Android device."
        exit 1
    fi
	notify " Android device mounted to $mp."
}

unmountusb() {
	sudo -A umount "$1" && notify-send "  USB unmounting" "$1 unmounted."
}

unmountandroid() {
	sudo -A umount -l "$1" && notify-send " Android Android unmounting" "$1 unmounted."
}

exclude_exp=$(lsblk -nrpo "name,mountpoint" | awk '$2=="/"{print $1}' | sed 's/[0-9]$//;s/\//\\\//g')
android_devs=$(simple-mtpfs -l 2>/dev/null | sed 's/://')
usb_devs=$(lsblk -nrpo "name,size,mountpoint" | awk '$1!~/'"$exclude_exp"'/&&$3==""{printf "%s (%s)\n",$1,$2}')
mounted=$(lsblk -nrpo "name,size,mountpoint" | awk '$1!~/'"$exclude_exp"'/&&length($3)>1{printf "%s (%s)\n",$3,$2}')

choices=$([ "$android_devs" ] && echo "$android_devs" | sed 's/^/mount /'
    [ "$usb_devs" ] && echo "$usb_devs" | sed 's/^/mount /'
    [ "$mounted" ] && echo "$mounted" | sed 's/^/unmount /')

echo "$choices" | dmenu -p "select action:" | while read action chosen
do
    echo "$chosen"
	dev="$(echo "$chosen" | awk '{print $1}')"
    case "$action" in
        mount)
            if echo "$usb_devs" | grep "$chosen"; then
                mountusb "$dev"
            else
                mountandroid "$dev"
            fi
            ;;
        unmount)
            if grep simple-mtpfs /etc/mtab | grep "$chosen"; then
                unmountandroid "$dev"
            else
                unmountusb "$dev"
            fi
            ;;
    esac
done
