#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status

notch=''
warn=''
charg=''
full=''
stag=''
bat0=''
bat1=''
bat2=''
bat3=''
bat4=''
cmd4='%{A4:xbacklight -inc 2:}'
cmd5='%{A5:xbacklight -dec 2:}'
closecmd='%{A}'

tmpfilelow="/tmp/notifying-low-battery"
tmpfilehigh="/tmp/notifying-high-battery"


# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
	# Get its remaining capacity and charge status.
	capacity=$(cat "$battery"/capacity 2>/dev/null) || break
	status=$(sed "s/[Dd]ischarging//;s/[Nn]ot charging/$notch/;s/[Cc]harging/$charg/;s/[Uu]nknown/$stag/;s/[Ff]ull/$full/" "$battery"/status)
    [ -f "$tmpfilelow" -a "$status" = "$charg" ] && rm "$tmpfilelow"
    [ -f "$tmpfilehigh" -a -z "$status" ] && rm "$tmpfilehigh"
    if [ "$capacity" -ge 85 -a "$status" = "$charg" -a ! -f "$tmpfilehigh" ]; then
            touch "$tmpfilehigh"
            notify-send "Unplug Laptop!" "The battery is charged enough,
charging further could decresase battery life."
    fi

    case $(( $capacity/25 )) in
        0)
            cap=$bat0
            if [ -z "$status" ]; then
                status=$warn
                if [ ! -f "$tmpfilelow" ]; then
                    touch "$tmpfilelow"
                    notify-send -u "critical" "LOW BATTERY"
                fi
            fi
            ;;
        1) cap=$bat1;;
        2) cap=$bat2;;
        3) cap=$bat3;;
        4) cap=$bat4;;
    esac

	echo "$cmd4$cmd5$status$cap$capacity%%$closecmd$closecmd"
done
